http:超文本传输协议(HyperText Transfer Protocol)
	是互联网上应用最广泛的一种网络协议，所有www文件都必须遵循这个标准
	
最初目的：为了提供一种发布和接受HTML的方法

http是一个客户端和服务器端请求和应答的标准(TCP)


通过HTTP或HTTPS协议请求 的资源由统一资源标识符(URI),更准确一点则为(URL)来标识
	
	
HTTP Keep-Alive：使客户端到服务器端的连接持续有效，当出现对服务器的后续请求时，能避免建立或重新建立连接，大部分web服务器，包括iPlanet、IIS、Apache，都支持Keep-Alive。对于提供静态内容的网站来说，这个功能通常很有用。但是对于负担较重的网站，会由于处理暂停期间本来可以释放的资源仍然被占用，而影响性能。
	
	
	
	
Http属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统

过程：有http客户端发起一个请求，建立一个到服务器端指定接口的TCP连接，HTTP服务器则在那个端口监听客户端发送的请求，一旦收到请求(向客户端)发回一个状态行，如“HTTP/1.1 200  ok”， 和响应消息，消息体可能是请求的文件、错误信息或者其他一些信息；HTTP使用的是TCP而非UDP，原因在于(打开)一个网站必须传送很多数据，而TCP协议提供传输控制，按顺序组织数据以及错误纠正

HTTP协议采用了请求/响应模型；
客户端向服务器发送一个请求，请求头包括：请求的方法、URL、协议版本、以及包含请求修饰符/客户信息/和内容的类似MIME的消息结构
服务器端以一个状态行作为响应，响应内容包括消息协议版本、成功祸错误编码加上包含服务信息、实体元信息以及可能的试题内容
	
http协议特点：
	1.支持客户端/服务器模式
	2.简单快速：客户想服务器请求时，只需要传送方法和路径，常用方法GET、HEAD、POST，每种方法规定了客户与服务器联系的类型不同，由于http协议简单，是的http服务器的程序规模小，因而通信速度快
	3.灵活：http允许传输任意类型的数据对象，正在传输的类型有Content-Type加以标记
	4.无连接：无连接的含义是限制每次连接只接受一个请求，服务器处理完客户的请求，并收到客户的应答之后，即断开连接，采用这种方式可以节省传输时间
	5.无状态：http协议是无状态协议，是指协议对书屋出力没有记忆能力，缺少状态意味着如果后续需要前面的信息，则必须重传，这样可能导致每次连接传送的数据量增大，另一方面，如果服务器不需要先前的信息时它的应答就比较快
	
	
http URL的格式：
	http://host[":"port][abs_path]
		host:合法的internet主机域名或者IP地址
		port:端口号，默认为80
		abs_path:指定请求资源的URI，如果URI中没有abs_path,那么当它作为请求URI时，必须以“/”
	
http 请求
	http请求由三部分组成：请求行、消息爆头、请求正文
	1.请求行：Method Request-URI HTTP-Version CRLF
		Method：请求方法，请求方法如下(方法全为大写)：
			GET：请求获取Request-URI所标识的资源
			POST：在Request-URI所标识的资源后附加新的数据
			HEAD：请求获取由Request-URI所标识的资源的响应消息报头，与GET方法几乎一样，利用这个方法，不必传输整个资源内容就可以得到Request-URI所标识的资源的信息，该方法常用语测试超链接的有效性，是否可以访问，以及最近是否更新
			PUT：请求服务器存储一个资源，并用Request-URI作为其标识
			DELETE：请求服务器删除Request-URI所标识的资源
			TRACE：请求服务器会送收到的请求消息，主要用于测试或诊断
			CONNECT：保留将来使用
			OPTIONS：请求查询服务器的性能，护着查询与资源相关的选项和需求
		Request-URI:统一资源标识符
		HTTP-Version:http协议版本
		CRLF表示回车和换行，除了作为结尾的CRLF，不允许出现单独的CR或LF字符
			
http 响应
	接受和解释请求消息后，服务器返回一个HTTP响应消息
	HTTP响应也是有三部分组成：状态行、消息报头、响应正文
	1.状态行格式：
	HTTP-Version Status-Code Reason-Phrase CRLF
		HTTP-Version：http版本
		Status-Code：服务器发回的响应状态代码
		Reason-Phrase：状态代码的文本描述
	状态代码有三位数组成，第一个数字定义了响应的类别，有五种可能取值：
		1XX：指示信息--表示请求已接收、继续处理
		2XX：成功--请求已被成功接收、理解、接受
		3XX：重定向--要完成请求必须进行进一步操作
		4XX：客户端错误--请求语法错误或请求无法实现
		5XX：服务器端错误--服务器未能实现合法的请求
	常见状态码、状态描述、说明：
		200：OK //客户端请求成功
		304：缓存为最新，不向服务器请求
		400：Bad Request //客户端请求语法有误，不能被服务器理解
		401：Unauthorized	//请求未经授权
		403：Forbidden	//服务器收到请求，但拒绝提供服务
		404：Not Found	//请求资源不存在，如错误的URL
		500：Internal Server Error	//服务器发生不可预期的错误
		503：Server Unavailable	//服务器当前不能处理客户端请求
			
HTTP 消息报头
	HTTP消息由请求和响应组成，请求消息和响应消息都是有开始行(请求行/响应行)、消息报头(可选)、空行(只有CRLF的行)，消息正文(可选)组成
	
	http消息报头包括普通报头、请求报头、响应报头、实体报头
	每个报头都有 名字+“:”+空格+值组成
	
	1.普通报头：有少数报头域用于所有的请求和响应信息，但并不用于被传输的实体，只用于传输的信息
		Cache-Control：用于指定缓存指令
		Date：表示消息产生的日期和时间
		Connection：允许发送指定连接的选项，如指定连接是连续的
	2.请求报头：允许客户端向服务器端传递请求的附加信息以及客户端自身的信息
		Accept：用于指定客户端接受哪些类型的信息，如Accept：text/html,表名客户端希望接受HTML文本
		Accept-Charset：用于指定客户端接受的字符集，如Accept-Charset：utf-8.如果没有设置这个域，可以接受任何字符集
		Accept-Encoding：类似于Accept，但是它是用于指定可接受的内容编码，如Accept-Encoding：gzip.deflate
		Accept-Language：类似于Accept，用于指定一种自然语言，如Accept-Language：zh-cn
		Authorization：用于证明客户端有权限查看某个字眼，当出现 401响应代码是，可以发送一个包含Authorization的请求
		Host(必须)：用于指定被请求资源的Internet主机和端口号
		User-Agent：允许客户端将它的操作系统、浏览器和它的属性告诉服务器，非必须
	3.响应报头：允许服务器传递不能放在状态行中的附加响应信息，以及关于服务器的信息和Request-URI所标识的资源进行下一步访问的信息
		Location：用于重定向接受者到一个新的位置，常用在更换域名
		Server：包含了服务器用来处理请求的软件信息，与User-Agent相对应
	4.实体报头：请求和响应消息度可以传送一个实体，一个实体由实体报头域和实体正文组成，这两者并非要一起发送，可以只发送实体报头域，其中包含有关实体正文和请求所标识的资源的原信息
		Content-Encoding：用作媒体类型修饰符，值指示了被应用到实体正文的附加内容的编码
		Contetn-Language：描述了资源所用的自然语言
		Content-Length：用于指明实体正文的长度，以字节方式存储的十进制数字表示
		Content-Type：指明发送给接收者的实体正文的媒体类型，如   Content-Type:text/html;charset=utf-8
		Last-Modified：用于指示资源的最后修改时间和日期
		Expires：给出响应过期的日期和时间，为了让浏览器不要缓存页面，可以利用Expires实体报头域，设置为0即可
		
		
http协议通讯过程观察---telnet
	原理：利用MS的telnet工具，通过手动输入http请求信息的方式，向服务器发出请求，服务器接收、解释和接受请求后，返回一个响应，该响应会在telnet窗口上显示，从而了解加深对http协议的通讯过程
		

	

























	
			
			
			
			
			
			
			

	
	
	
	