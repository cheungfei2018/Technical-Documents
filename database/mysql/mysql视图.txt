视图：是一个虚拟表，其内容由查询语句定义，与真实表一样包含一系列带名称的属性列和行数据；视图并不在数据库中以存储的数据值集形成存在，行和列数据来自定义视图的查询所引用的表，并在引用视图时动态生成。
视图的作用与优点：
1.安全，有些数据表有重要信息，有些字段需要保密，这时可以创建一个视图，在这张视图中只保留一部分字段
2.性能，关系数据库的数据常常会分表存储，然后使用外键建立这些表之间的关系，这时通常会用到join连接，这样效率较低也比较麻烦，建立视图可以避免join查询数据，同时简化用户操作
3.灵活，如果有一张旧表因为设计问题需要废弃，却又很多应用基于该表，不易修改，这时可以建立一张视图，然后将视图中的数据直接映射到新建的表，这样就可以做很小的改动达到升级数据表的目的

注意：数据库的设计和结构不会受到视图中的函数、where或join语句的影响;视图总是显示最新的数据；用户查询视图时，数据库引擎通过使用sql语句重建数据(查询最新数据)





创建视图：
Create [or replace(替换)] view 视图名称 as select语句;
修改(更新)视图：
Alter view 视图名称 as select语句;
或
Create [or replace] view 视图名称 as select语句;
删除视图：
Drop view 视图名称;
查看视图：
1.查看表：show tables;
2.查看所有的视图：
i.	Show table status where comment = ‘view’;（视图被看做一种抽象表，显示视图状态的语句与显示表状态的语句相同，只是在comment列中‘view’区分）
ii.	 Select *from information_schema.tables where table_type=’view’;

注意：建议只对视图执行查询操作，因为修改、添加、删除数据对视图结构有要求，很多时候视图不能执行后面三个操作.

