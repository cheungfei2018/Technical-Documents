WXS：小程序的一套脚本语言，结合 WXML，可以构建出页面的结构

特点：
	1.wxs 不依赖于运行时的基础库版本，可以在所有版本的小程序中运行
	2.wxs 与 javascript 是不同的语言，有自己的语法，并不和 javascript 一致
	3.wxs 的运行环境和其他 javascript 代码是隔离的，wxs 中不能调用其他 javascript 文件中定义的函数，也不能调用小程序提供的API
	4.wxs 函数不能作为组件的事件回调
	5.由于运行环境的差异，在 iOS 设备上小程序内的 wxs 会比 javascript 代码快 2 ~ 20 倍。在 android 设备上二者运行效率无差异

	
WXS模块：
	WXS代码可以编写在wxml文件中的<wxs>标签内，或者写在.wxs为后缀名的文件内
	
	模块：每一个 .wxs 文件和 <wxs> 标签都是一个单独的模块
		每个模块独有自己独立的作用域，即在一个模块里面定义的变量与函数，默认为私有，对其他模块不可见
		一个模块要想对外暴露其内部的私有变量与函数，只能通过module.exports实现
		
		.wxs文件可以被其他的.wxs文件或WXML文件中的<wxs>标签引用
		
		
	module对象：每一个wxs模块均有一个内置的module对象
		module对象属性：exports--该属性可以对外共享本模块的私有变量和函数
		
		
	require函数：在.wxs模块中引用其他wxs文件模块
		1.只能引用 .wxs文件模块，且必须使用相对路径
		2.wxs模块均为单例，wxs模块在第一次被引用时，会自动初始化为单例对象；多个页面、多个地方、多次引用，使用的都是同一个wxs模块对象
		3.如果一个wxs模块在定义之后，一直没有被引用，则该模块不会被解析和运行
		
		
	<wxs />标签属性：
		module：String，当前<wxs>标签的模块名，必填字段；在单个 wxml 文件内，建议其值唯一。有重复模块名则按照先后顺序覆盖（后者覆盖前者）。不同文件之间的 wxs 模块名不会相互覆盖
			命名规则：
			首字符必须是：字母（a-zA-Z），下划线（_）
			剩余字符可以是：字母（a-zA-Z），下划线（_）， 数字（0-9）

		src：String，引用.wxs文件的相对路径，仅当本标签为单闭合标签或标签的内容为空时有效
			注意：
				只能引用 .wxs 文件模块，且必须使用相对路径。
				wxs模块均为单例，wxs模块在第一次被引用时，会自动初始化为单例对象。多个页面，多个地方，多次引用，使用的都是同一个wxs模块对象
				如果一个wxs模块在定义之后，一直没有被引用，则该模块不会被解析与运行
				
		
		
变量：
	WXS 中的变量均为值的引用。
	没有声明的变量直接赋值使用，会被定义为全局变量。
	如果只声明变量而不赋值，则默认值为 undefined。
	var表现与javascript一致，会有变量提升
	
	
注释：
	// 单行注释
	/*
		多行注释
	
	*/
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		