Generator函数：一种异步变成解决方案 

Generator：(浏览器环境中配置不足，测试无法通过，需要通过webpack配置)--为js提供了惰性求值

   1.状态机，封装了到各内部状态
   2.遍历器对象生成函数，返回的遍历器对象，可以一次遍历Generator函数内部的每一个状态,代表Generator函数的内部指针(yield--b表示暂停执行且将yield表达式的值作为返回值--);然后每次调用遍历器对象的next()方法可以都会返回一个带有value和done两个属性的对象，表示当前的状态，当done返回为true时，表示遍历结束

   格式：是一个普通函数，但和普通函数有些区别：
       1.function关键字与函数名之间有一个星号 *
	   2.函数体内部使用 yield 表达式，用于定义不同的内部状态
       3.Generator函数也可以不用yield表达式，即当做一个单纯的暂缓执行函数，当next()调用时执行
       4.yield表达式只能用在Generator函数中，其他地方使用会报错

   return和yield的相同之处和区别：
       相同之处：都能返回语句后面那个表达式的值
       区别：
           1.每次遇到yield，函数会暂停执行，下次调用next()方法再从该位置继续向后执行，而return语句不具备位置记忆功能
           2.一个函数中，return只能有一个，而yield可以有多个

