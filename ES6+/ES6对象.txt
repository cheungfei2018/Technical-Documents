
4.扩展的对象功能：
	对象的初始化简写：
		ES5中由于对象都是以键值对的形式书写，所以可能出现键值对重名，也就是键和值具有相同的名称；如：
			function people(name, age) {
				return {
					name: name,
					age: age
				};
			}
		在ES6中可以进行简写：
		function people(name, age) {
			return {
				name,
				age
			};
		}
		
	ES6也改进了为对象字面量方法赋值的语法；可以省略冒号与function，语法变得更简洁：
		const people = {
			name: 'lux',
			getName () {
				console.log(this.name)
			}
		}
		
	ES6对象提供了Object.assign()方法实现浅复制；可以吧任意多个源对象自身可美剧的属性拷贝给目标对象，然后返回目标对象。第一参数即为目标对象，实际项目中为了不改变原对象，一般讲目标对象设为{}；如：
		const obj = Object.assign({},objA,objB...);