
++++++++++++++++++++++++++++++++++++++++++
--------------浏览器介绍篇----------------
++++++++++++++++++++++++++++++++++++++++++


目前使用的主流浏览器有五个：
Internet Explorer、Firefox、Safari、Chrome和 Opera浏览器

 StatCounter 网站可以查看 浏览器统计数据
 
浏览器的主要功能：向服务器发出请求，在浏览器窗口中展示您想要访问的网络资源
	这里所说的资源一般是指 HTML 文档，也可以是 PDF、 图片或其他的类型；资源的位置通过用户使用URI(统一资源标识符)指定
	
	浏览器解释并显示HTML文件的方式是在 HTML和CSS规范中 指定的。这些规范由网络标准化组织W3C（万维网联盟）进行维护
	
浏览器高层结构(High Level Structure)
	1.用户界面
	2.浏览器引擎-在用户界面和渲染引擎之间传送指令
	3.渲染引擎-负责显示请求的内容，如果请求的内容是html，他就负责解析HTML和css内容，并将解析后的内容显示在屏幕上
	4.网络-用于网络调用，如http请求，其接口与平台无关，并为所有平台提供底层实现
	5.用户界面后端-用于绘制基本的窗口小部件，如组合框和窗口，其公开了与平台无关的通用接口，而在底层实现操作系统的用户界面方法
	6.JavaScript解释器，用于解析和执行JavaScript代码
	7.数据存储，这是持久层，浏览器需要在硬盘上保护各种数据，如cookie，HTML5定义了“网络数据库”，这是一个完整(但是轻便)的浏览器内数据库
	
	高层结构图解连接：http://img.blog.csdn.net/20160313105554184

	tip：不同于大多数浏览器，chrome浏览器为每个标签页(tab)度分配了各自的渲染引擎实例，每个标签页都是一个独立的进程，即每个标签页都在独立的“沙箱”中运行，在提高安全性的同时，一个标签页的崩溃也不会导致其他标签页面被关闭
	

++++++++++++++++++++++++++++++++++++++++++
----------------渲染引擎------------------
++++++++++++++++++++++++++++++++++++++++++
	渲染一起的职责就是渲染，即在浏览器窗口显示所请求的页面，这是每个浏览器的核心，所以渲染引擎也成为浏览器内核
	默认情况下，渲染引擎可显示HTML和XML文档及图片。通过插件（或浏览器扩展程序），还浏览器渲染引擎也可以显示其它类型的内容。例如，使用PDF查看器插件就能显示PDF文档
	
	渲染引擎介绍：
		1.浏览器（Firefox、Chrome和Safari）是基于两种渲染引擎构建的。Firefox使用的是Gecko，这是Mozilla公司“自制”的渲染引擎。而Safari和Chrome(28版本以前)浏览器使用的都是 Webkit。
			tip：chrome28版本中，开始正式使用Blink内核
			
		2.webkit是一种开放源代码渲染引擎，期初用于Linux平台，后由apple进行修改，从而支持苹果机和windows
	
	主流程：渲染引擎一开始会从网络层获取请求文档的内容，通常以8K分块的方式完成。获取了文档内容之后，渲染引擎开始正式工作，其基本流程：
	http://img.blog.csdn.net/20160313121300034
	渲染引擎解析HTML文档，并将文档中的标签转化为dom节点树，即”内容树”。同时，它也会解析外部CSS文件以及style标签中的样式数据。这些样式信息连同HTML中的”可见内容”一道，被用于构建另一棵树――”渲染树(Render树)”
	渲染树由一些带有视觉属性(如颜色、大小等)的矩形组成，这些矩形将按照正确的顺序显示在频幕上
	渲染树构建完毕之后，将会进入”布局”处理阶段，即为每一个节点分配一个屏幕坐标。再下一步就是绘制(painting)，即遍历render树，并使用UI后端层绘制每个节点
	tip：值得注意的是，这个过程是逐步完成的，为了更好的用户体验，渲染引擎将会尽可能早的将内容呈现到屏幕上，并不会等到所有的html都解析完成之后再去构建和布局render树。它是解析完一部分内容就显示一部分内容，同时，可能还在通过网络下载其余内容
	Webkit主流程：http://img.blog.csdn.net/20160313124018522
	Mozilla的Gecko渲染引擎主流程：
	http://img.blog.csdn.net/20160313124114023
	
	
	太多了，不写不写
	
	
	
++++++++++++++++++++++++++++++++++++++++++
---------------浏览器缓存-----------------
++++++++++++++++++++++++++++++++++++++++++
	浏览器缓存(BrowserCaching)是为了节约网络的资源加速浏览，浏览器在用户磁盘上对最近请求过的文档进行存档，当访问者再次请求这个页面时，浏览器就可以从本地磁盘显示文档，达到加速页面浏览的效果
	浏览器缓存主要有两类：
		缓存协商：Last-modified，Etag
		彻底缓存：cache-control，Expries
	缓存的方式节约了网络的资源，提高了网络的效率
	缺点：如，web服务器可能英雌未计算一个页面或广告已被阅览的次数
	
	清理方法：各种浏览器设置/工具页面都有清除缓存的按钮
	
	彻底缓存：在缓存失效之前不再需要跟服务器交互的缓存叫做彻底缓存	
		常用的是Expires，Expries的值是一个绝对时间，由服务器产生
		存在的问题：服务器时间可能跟客户端时间不一致导致缓存时间偏差
		解决时间偏差问题：使用cache-control，他保存的是一个相对浏览器的事件；当同时存在cache-control和Expires时，浏览器总是优先使用Cache-Control，如果没有Cache-Control才会考虑Expires
		浏览器缓存最大的价值是节省了带宽，却提高吞吐率方面效果不明显
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	