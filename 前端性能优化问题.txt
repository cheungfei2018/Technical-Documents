前端优化：
	1.减少http请求，合理设置http请求
	2.使用浏览器缓存
	3.启用压缩
	4.css Sprites（css图片合并）
	5.使用ImagesLazyload插件进行图片延迟加载
	6.css放最上部，JavaScript放最下部
	7.异步请求Callback
	8.减少cookie传输
	9.js代码优化：
		9.1 DOM
		9.2别用with
		9.3避免使用eval和function
		9.4减少作用域链查找
		9.5数据访问：数据放入局部变量
		9.6字符串连接：“+”效率低，字符串较多时可考虑加入数组中用join拼接
		
	10 css优化
		10.1 把样式表放在HEAD标签中以提升页面的逐步渲染速度
		10.2 避免使用css表达式，使用前编译成css
		10.3 最好能避免使用行内样式
		10.4 css选择符是从右到左匹配的，
			避免使用通配规则，推荐仅使用id、class、元素选择器
			不要限定ID选择符
			不要限定类选择符
			让规则越具体越好，尽量避免使用派生选择器
			避免使用后代选择符，通常开销会最高
			依靠继承，了解哪些属性可以继承，然后避免相同的重复(很有用)
			
	11 CDN加速：CDN-内容发布网络，本质是一个缓存；将数据缓存在离用户最近的地方，使用户以最快的速度获取数据，也就是所谓的网络访问第一条；
		CDN一般缓存静态资源，如图片、文件、css、js脚本、静态页面等；将其缓存在CDN可极大改善网页的打开速度
		
	12 反向代理服务器
		
		
		
		
		
		
		
		
		
		
		
		